[{"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\index.js":"1","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\reportWebVitals.js":"2","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\App.js":"3","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Home.js":"4","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Tests.js":"5","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Questions.js":"6","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstance.js":"7","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceForm.js":"8","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestCard.js":"9","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionsTable.js":"10","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionForm.js":"11","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\EndTest.js":"12","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\Answers.js":"13","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\QuestionInstance.js":"14","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestService.js":"15","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\AnswerService.js":"16","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\QuestionService.js":"17","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestInstanceService.js":"18","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\FieldOfStudyService.js":"19","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\CompanyService.js":"20","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TagService.js":"21","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\AnswerInstance.js":"22","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\httpService.js":"23","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\environments\\environment.js":"24","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\AnswerInstanceService.js":"25","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateQuestionNew.js":"26","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTag.js":"27","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TagSelector.js":"28","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\QuestionTagsService.js":"29","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\AnswerComponent.js":"30","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateQuestionComponent.js":"31","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateTest.js":"32"},{"size":565,"mtime":1646305719997,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1646305719998,"results":"35","hashOfConfig":"34"},{"size":1282,"mtime":1647164923252,"results":"36","hashOfConfig":"34"},{"size":911,"mtime":1646305719993,"results":"37","hashOfConfig":"34"},{"size":699,"mtime":1646305719996,"results":"38","hashOfConfig":"34"},{"size":1278,"mtime":1647164955639,"results":"39","hashOfConfig":"34"},{"size":4914,"mtime":1646920385412,"results":"40","hashOfConfig":"34"},{"size":2429,"mtime":1647088460935,"results":"41","hashOfConfig":"34"},{"size":548,"mtime":1646305719994,"results":"42","hashOfConfig":"34"},{"size":629,"mtime":1646920060978,"results":"43","hashOfConfig":"34"},{"size":1347,"mtime":1646305719993,"results":"44","hashOfConfig":"34"},{"size":1002,"mtime":1647088100963,"results":"45","hashOfConfig":"34"},{"size":1190,"mtime":1646905564681,"results":"46","hashOfConfig":"34"},{"size":1288,"mtime":1646664269958,"results":"47","hashOfConfig":"34"},{"size":645,"mtime":1646305720000,"results":"48","hashOfConfig":"34"},{"size":978,"mtime":1647162049302,"results":"49","hashOfConfig":"34"},{"size":869,"mtime":1647159125456,"results":"50","hashOfConfig":"34"},{"size":1001,"mtime":1647088729168,"results":"51","hashOfConfig":"34"},{"size":743,"mtime":1646305719999,"results":"52","hashOfConfig":"34"},{"size":683,"mtime":1646305719999,"results":"53","hashOfConfig":"34"},{"size":714,"mtime":1647158143057,"results":"54","hashOfConfig":"34"},{"size":341,"mtime":1646662078365,"results":"55","hashOfConfig":"34"},{"size":614,"mtime":1646305720000,"results":"56","hashOfConfig":"34"},{"size":61,"mtime":1646305719996,"results":"57","hashOfConfig":"34"},{"size":898,"mtime":1647089603878,"results":"58","hashOfConfig":"34"},{"size":4538,"mtime":1647164951264,"results":"59","hashOfConfig":"34"},{"size":1056,"mtime":1647158206389,"results":"60","hashOfConfig":"34"},{"size":940,"mtime":1647157316888,"results":"61","hashOfConfig":"34"},{"size":876,"mtime":1647161701261,"results":"62","hashOfConfig":"34"},{"size":1893,"mtime":1647164878122,"results":"63","hashOfConfig":"34"},{"size":2576,"mtime":1647164946361,"results":"64","hashOfConfig":"34"},{"size":3632,"mtime":1647164948366,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1jdlwjc",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\index.js",[],["143","144"],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\reportWebVitals.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\App.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Home.js",["145"],"import React from \"react\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <div>\r\n      <div className=\"homeContainer\">\r\n        <h1 style={{ textAlign: \"center\" }}>Wecome to Quizzer</h1>\r\n        <button className=\"btn\" onClick={() => navigate(\"/tests\")}\r\n          style={{ backgroundColor: \"green\",\r\n          textAlign: \"center\", display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"50px auto\" }}>\r\n          Go To Tests\r\n        </button>\r\n        <button className=\"btn\" onClick={() => navigate(\"/questions\")}\r\n          style={{ backgroundColor: \"green\",\r\n          textAlign: \"center\", display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"50px auto\" }}>\r\n          Go To Questions\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Tests.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Questions.js",["146","147","148","149"],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstance.js",["150","151","152","153","154"],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport QuestionService from \"../services/ServicesFolder/QuestionService\";\r\nimport AnswerService from \"../services/ServicesFolder/AnswerService\";\r\nimport QuestionInstance from \"../components/TestInstanceComponents/QuestionInstance\";\r\nimport Answers from \"./TestInstanceComponents/Answers\";\r\nimport EndTest from \"./EndTest\";\r\n\r\nconst TestInstance = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n  const [currentAnswers, setCurrentAnswers] = useState({});\r\n  const [questionCounter, setQuestionCounter] = useState(0);\r\n  const [canStartTest, setCanStartTest] = useState(false);\r\n  const [finishedTest, setFinishedTest] = useState(false);\r\n  const [submittedAnswers, setSubmittedAnswers] = useState([]);\r\n\r\n  function shuffleArray(array) {\r\n    if (array.length === 0) return array;\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }\r\n\r\n  const handleUpdateSubmittedAnswers = (index, submittedAnswer) => {\r\n    const newTodos = [...submittedAnswers];\r\n    newTodos[index] = submittedAnswer;\r\n    setSubmittedAnswers(newTodos);\r\n  };\r\n  function onAnswerSubmit(submittedAnswer) {\r\n    let parsedSubmittedAnswer = parseInt(submittedAnswer)\r\n    setSubmittedAnswers([...submittedAnswers, parsedSubmittedAnswer]);\r\n  }\r\n\r\n  let navigate = useNavigate();\r\n  let { id, testinstanceid } = useParams();\r\n  useEffect(() => {\r\n    const initializeTestQuestions = async () => {\r\n      const questionsForCurrentTest = await getQuestionsForCurrentTest();\r\n      shuffleArray(questionsForCurrentTest);\r\n      setQuestions(questionsForCurrentTest);\r\n      initializeAnswersToQuestions(questionsForCurrentTest);\r\n\r\n      console.log(questions[questionCounter]);\r\n    };\r\n    const initializeAnswersToQuestions = async (filteredQuestions) => {\r\n      const filteredAnswers = await getAnswersForCurrentQuestion(\r\n        filteredQuestions[questionCounter].QuestionId\r\n      );\r\n      setAnswers(filteredAnswers);\r\n      setAnswers(filteredAnswers);\r\n    };\r\n    initializeTestQuestions();\r\n  }, []);\r\n\r\n  const onStartTest = () => {\r\n    setCanStartTest(true);\r\n    setCurrentQuestion(questions[questionCounter]);\r\n    setCurrentAnswers(answers);\r\n  };\r\n\r\n  const getQuestionsForCurrentTest = async () => {\r\n    const res = await QuestionService.GetQuestionsByTestId(id);\r\n    return [...res];\r\n  };\r\n\r\n  const getAnswersForCurrentQuestion = async (questionid) => {\r\n    const res = await AnswerService.GetAnswersByQuestionId(questionid);\r\n    return [...res];\r\n  };\r\n\r\n  const onQuestionSubmit = async () => {\r\n    if (questionCounter + 1 < questions.length) {\r\n      let counter = questionCounter + 1;\r\n      setCurrentQuestion(questions[counter]);\r\n      setQuestionCounter(questionCounter + 1);\r\n      const nextAnswers = await getAnswersForCurrentQuestion(\r\n        questions[questionCounter + 1].QuestionId\r\n      ).then((answers) => {\r\n        setCurrentAnswers(answers);\r\n      });\r\n    } else {\r\n      setFinishedTest(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {(() => {\r\n        if (!finishedTest)\r\n          return (\r\n            <div className=\"test-container\">\r\n              {(() => {\r\n                if (!canStartTest && answers && currentAnswers)\r\n                  return (\r\n                    <div>\r\n                      <p>Welcome to the test! to start press begin:</p>\r\n                      <button className=\"btn\" onClick={() => onStartTest()}>\r\n                        Start Test\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                else\r\n                  return (\r\n                    <QuestionInstance\r\n                      currentQuestion={currentQuestion}\r\n                      currentAnswers={currentAnswers}\r\n                      questionCounter={questionCounter}\r\n                      onAnswerSubmit={onAnswerSubmit}\r\n                      onQuestionSubmit={() => onQuestionSubmit()}\r\n                      totalQuestions={questions.length}\r\n                      submittedAnswers={submittedAnswers}\r\n                      setSubmittedAnswers={setSubmittedAnswers}\r\n                    />\r\n                  );\r\n              })()}\r\n            </div>\r\n          );\r\n        else\r\n          return (\r\n            <div className=\"test-container\">\r\n              <EndTest\r\n                submittedAnswers={submittedAnswers}\r\n                testinstanceid={testinstanceid}\r\n              />\r\n            </div>\r\n          );\r\n      })()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestInstance;\r\n// {answers.map((answer) => (\r\n//   <AnswerInstance key={answer.Id} answer={answer} />\r\n// ))}\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceForm.js",["155","156"],"import React, {useState, useEffect} from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport TestInstanceService from '../services/ServicesFolder/TestInstanceService'\r\n\r\nconst TestInstanceForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    let { id } = useParams();\r\n    let navigate = useNavigate();\r\n    const createTestInstance = async (TestInstance) => {\r\n        const testinstanceid = await TestInstanceService.AddTestInstance(TestInstance);\r\n        return testinstanceid;\r\n        \r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!email) {\r\n          alert(\"Please enter an email\");\r\n        }\r\n        if (!firstName) {\r\n          alert(\"Please enter a first name\");\r\n        }\r\n        if (!lastName) {\r\n          alert(\"Please enter a last name\");\r\n        }\r\n        let TestId = id;\r\n        let Email = email;\r\n        let FirstName = firstName;\r\n        let LastName = lastName;\r\n        const value = await createTestInstance({ TestId ,Email, FirstName, LastName })\r\n            .then((res) => {return res.data})\r\n            .then((res) => navigate('/test/' + id + '/' + res)\r\n            \r\n            )};\r\n        \r\n      return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n          <div className=\"form-control\">\r\n            <label>Enter Email</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label>Enter First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-control form-control-check\">\r\n            <label>Enter Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </div>\r\n          <input className=\"btn\" type=\"submit\" value=\"Start Test\" />\r\n        </form>\r\n      );\r\n}\r\n\r\nexport default TestInstanceForm","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestCard.js",["157"],"import React from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst TestCard = ({ test }) => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <div className=\"test\">\r\n      <h2>{test.Title}</h2>\r\n      <p>{test.Intro}</p>\r\n      <p>Minimum to pass: {test.MinimumToPass}</p>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: \"green\" }}\r\n        onClick={() => navigate('/testform/' + test.TestId)}\r\n      >\r\n        Take Test\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestCard;\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionsTable.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionForm.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\EndTest.js",["158"],"import React, { useEffect } from 'react'\r\nimport { useNavigate, } from \"react-router-dom\";\r\nimport AnswerInstanceService from \"../services/ServicesFolder/AnswerInstanceService\";\r\n\r\n\r\nconst EndTest = ({submittedAnswers, testinstanceid}) => {\r\n  let navigate = useNavigate();\r\n  useEffect(() => {\r\n    const sendUserAnswers = async () => {\r\n      await AnswerInstanceService.AddAnswerInstance({submittedAnswers, testinstanceid})\r\n    };\r\n    sendUserAnswers();\r\n  }, []);\r\n\r\n  return (\r\n    //send answer ids to api to create answerinstances\r\n    //send info to reportservice\r\n\r\n\r\n    <div>\r\n      <p style={{textAlign: 'center'}}> Thank you! results will be mailed to you.</p>\r\n      <button className=\"btn\" onClick={() => navigate(\"/\")}\r\n          style={{ backgroundColor: \"green\",\r\n          textAlign: \"center\", display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"50px auto\" }}>\r\n          Go To Home Page\r\n        </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EndTest","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\Answers.js",["159"],"import React, {useState} from \"react\";\r\nimport AnswerInstance from \"./AnswerInstance\";\r\n\r\nconst Answers = ({ currentAnswers, submittedAnswers,\r\n  setSubmittedAnswers, isSingleChoice, onQuestionSubmit, onAnswerSubmit }) => {\r\n    const [selectedRadioButton, setSelectedRadioButton] = useState(false);\r\n\r\n    const isRadioSelected = (value) => {\r\n    \r\n      return selectedRadioButton === value;\r\n    }\r\n  \r\n    const handleRadioClick = (e) => {\r\n      setSelectedRadioButton(e.currentTarget.value);\r\n    }\r\n    //edit the method to save the id\r\n  return (\r\n    <div>\r\n      { currentAnswers && currentAnswers.map((answer) => (       \r\n      <div key={answer.AnswerId}>\r\n        <input\r\n            name='currentDisplayedAnswers'\r\n            type={isSingleChoice ? 'checkbox' : 'radio'}\r\n            value={answer.AnswerId}\r\n            isChecked={isRadioSelected(answer.AnswerId)}\r\n            onChange={handleRadioClick}\r\n            />\r\n            <label>{answer.Content}</label>\r\n            \r\n    </div>\r\n      ))}\r\n    <button type='submit' onClick={() => { onQuestionSubmit(); onAnswerSubmit(selectedRadioButton);}}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\QuestionInstance.js",["160","161","162","163","164","165"],"import React, {useState, useEffect} from 'react'\r\nimport Answers from './Answers';\r\n\r\nconst QuestionInstance = ({ currentQuestion, currentAnswers, onQuestionSubmit, \r\n  questionCounter, totalQuestions, onAnswerSubmit, \r\n  submittedAnswers, setSubmittedAnswers}) => {\r\n    const [isSingleChoice, setIsSingleChoice] = useState(currentQuestion.isSingleChoice)\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [isTrueAnswers, setIsTrueAnswers] = useState(false);\r\n    const [isTestDone, setIsTestDone] = useState(false);\r\n    \r\n    \r\n    useEffect(() => {\r\n        \r\n        \r\n    }, [])\r\n  return (\r\n    <div className='test-container'>\r\n         \r\n        <div>\r\n          <p>{currentQuestion.Title}</p>\r\n          <Answers \r\n            currentAnswers={currentAnswers} \r\n            isChecked={isChecked}\r\n            submittedAnswers={submittedAnswers}\r\n            setSubmittedAnswers={setSubmittedAnswers}\r\n            isSingleChoice={isSingleChoice}\r\n            onQuestionSubmit={onQuestionSubmit}\r\n            onAnswerSubmit={onAnswerSubmit}\r\n          />\r\n          \r\n          {\r\n            <p>Current question: {questionCounter} / {totalQuestions}</p>} \r\n        </div>\r\n        \r\n        \r\n               \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionInstance","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\AnswerService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\QuestionService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestInstanceService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\FieldOfStudyService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\CompanyService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TagService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\AnswerInstance.js",["166"],"import React, {useState} from 'react'\r\n\r\nconst AnswerInstance = ({answer}) => {\r\n  // type={isSingleChoice ? 'checkbox' : 'radio'}\r\n  \r\n  return (\r\n    <div>\r\n        <input    \r\n            value={answer.Content}\r\n            />\r\n            <label>{answer.Content}</label>\r\n            \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnswerInstance","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\httpService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\environments\\environment.js",["167"],"export default {\r\n  serverUrl: \"http://localhost:4000\",\r\n};\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\AnswerInstanceService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateQuestionNew.js",["168","169"],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTag.js",["170"],"import React, { useState } from \"react\";\r\nimport TagService from \"../services/ServicesFolder/TagService\";\r\n\r\nconst CreateTag = ({handleAddTag}) => {\r\n  const [title, setTitle] = useState('');\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title) {\r\n      alert(\"Please enter a title\");\r\n    }\r\n    const value = await TagService.AddTag({ title })\r\n      .then((res) => {\r\n        return res.data\r\n      })\r\n      .then((res) => {\r\n        let TagId = res;\r\n        let Title = title;\r\n        handleAddTag({TagId, Title});\r\n      })\r\n      .catch((err) =>\r\n        console.log(err)\r\n      );\r\n  };\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Enter Tag Title</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Tag\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <input className=\"btn\" type=\"submit\" value=\"Save Tag\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateTag;\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TagSelector.js",["171"],"import React, { useState } from \"react\";\r\nimport CreateTag from './CreateTag'\r\n\r\nconst TagSelector = ({ allTags, questionTags, setQuestionTags, selectedTag, handleAddTag }) => {\r\n  const addToTagList = (e) => {\r\n    selectedTag(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control form-control-check\">\r\n      <label>Select tags</label>\r\n      <select \r\n        onChange={addToTagList}\r\n      >\r\n        {allTags.map((tag) => (\r\n          <option \r\n            key={tag.TagId}\r\n            value={tag.Title}\r\n            >\r\n                {tag.Title}\r\n        </option>\r\n        ))}\r\n      </select>\r\n      <div>\r\n        <p>Selected Tags:</p>\r\n        {questionTags.map((tag) => (\r\n          <p>{tag}</p>\r\n        ))}\r\n      </div>\r\n      <p>Or, create a new tag:</p>\r\n      <CreateTag\r\n        allTags={allTags}\r\n        handleAddTag={handleAddTag}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagSelector;\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\QuestionTagsService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\AnswerComponent.js",["172","173","174","175"],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateQuestionComponent.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateTest.js",["176","177","178","179"],"import QuestionComponent from \"./CreateQuestionComponent\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CompanyService from \"../../services/ServicesFolder/CompanyService\"\r\nimport FieldOfStudyService from \"../../services/ServicesFolder/FieldOfStudyService\"\r\nimport TestService  from \"../../services/ServicesFolder/TestService\";\r\n\r\nconst CreateTest = () => {\r\n  const [questions, setQuestions ]= useState([]);\r\n  const [intro, setIntro]=useState('');    \r\n  const [minimumToPass, setMinimumToPass]=useState(55);    \r\n  const [title, setTitle]=useState('');    \r\n  const [fieldOfStudyId, setFieldOfStudyId]=useState();\r\n  const [companyId, setCompanyId]=useState();\r\n \r\n  const [allCompanies, setAllCompanies] = useState([]);\r\n  const [allFieldsOfStudy, setAllFieldsOfStudy] = useState([]);\r\n  \r\n  const selectedCompany = (company) => {\r\n    setCompanyId = company.companyId;\r\n  };\r\n\r\n  const selectedFieldOfStudy = (fieldOfStudy) => {\r\n    setFieldOfStudyId = fieldOfStudy.FieldOfStudyId;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeAllCompanies = async () => {\r\n      const allCompanyes = await CompanyService.GetAllCompanys()\r\n        .catch(err => console.log(err));\r\n      setAllCompanies(allCompanyes);\r\n      initializeAllFieldsOfStudy();\r\n    }\r\n    const initializeAllFieldsOfStudy = async () => {\r\n      const allFieldsOfStudy = await FieldOfStudyService.GetAllFieldsOfStudy();\r\n      setAllFieldsOfStudy(allFieldsOfStudy);\r\n    }\r\n    initializeAllCompanies();\r\n  }, [])\r\n\r\n  const AddQuestion=(question)=>{\r\n    setQuestions([...questions,question])\r\n  }\r\n\r\n  const SendTest=()=>{\r\n    let test ={      \r\n      Intro: intro,\r\n      MinimumToPass: minimumToPass,\r\n      Title: title,\r\n      FieldOfStudyId: fieldOfStudyId,\r\n      CompanyId: companyId\r\n    } \r\n    TestService.AddTest({test: test , questions: questions});\r\n  }\r\n\r\n  return (\r\n    <div className=\"homeContainer\">\r\n\r\n      <form className=\"add-form\" >\r\n        <div className=\"form-control\">\r\n          <label>Enter Title</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Enter Minimum To Pass</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Minimum To Pass\"\r\n            onChange={(e) => setMinimumToPass(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n          <label>Enter Intro</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Intro\"\r\n            onChange={(e) => setIntro(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n          <label>check company</label>\r\n          <select onChange={selectedCompany}>\r\n            {allCompanies.map((Company) => (\r\n            <option id={Company.CompanyId}>{Company.CompanyName}</option>\r\n          ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n          <label>check Field Of Study</label>\r\n          <select onChange={selectedFieldOfStudy}>\r\n            {allFieldsOfStudy.map((fieldOfStudy) => (\r\n            <option id={fieldOfStudy.FieldOfStudyId}>{fieldOfStudy.FieldName}</option>\r\n          ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <QuestionComponent AddQuestion={AddQuestion} />\r\n        </div>\r\n        <input className=\"btn\" type=\"submit\" value=\"Create Test\" onClick={SendTest}/>\r\n      </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CreateTest\r\n",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":2,"column":23,"nodeType":"186","messageId":"187","endLine":2,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":2,"column":23,"nodeType":"186","messageId":"187","endLine":2,"endColumn":32},{"ruleId":"184","severity":1,"message":"188","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":20},{"ruleId":"184","severity":1,"message":"189","line":20,"column":9,"nodeType":"186","messageId":"187","endLine":20,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":22,"column":5,"nodeType":"186","messageId":"192","endLine":22,"endColumn":17},{"ruleId":"184","severity":1,"message":"193","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":15},{"ruleId":"184","severity":1,"message":"194","line":27,"column":9,"nodeType":"186","messageId":"187","endLine":27,"endColumn":37},{"ruleId":"184","severity":1,"message":"195","line":37,"column":7,"nodeType":"186","messageId":"187","endLine":37,"endColumn":15},{"ruleId":"196","severity":1,"message":"197","line":56,"column":6,"nodeType":"198","endLine":56,"endColumn":8,"suggestions":"199"},{"ruleId":"184","severity":1,"message":"200","line":79,"column":13,"nodeType":"186","messageId":"187","endLine":79,"endColumn":24},{"ruleId":"184","severity":1,"message":"201","line":1,"column":26,"nodeType":"186","messageId":"187","endLine":1,"endColumn":35},{"ruleId":"184","severity":1,"message":"202","line":32,"column":15,"nodeType":"186","messageId":"187","endLine":32,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":2,"column":23,"nodeType":"186","messageId":"187","endLine":2,"endColumn":32},{"ruleId":"196","severity":1,"message":"203","line":13,"column":6,"nodeType":"198","endLine":13,"endColumn":8,"suggestions":"204"},{"ruleId":"184","severity":1,"message":"205","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":22},{"ruleId":"184","severity":1,"message":"206","line":7,"column":28,"nodeType":"186","messageId":"187","endLine":7,"endColumn":45},{"ruleId":"184","severity":1,"message":"207","line":8,"column":23,"nodeType":"186","messageId":"187","endLine":8,"endColumn":35},{"ruleId":"184","severity":1,"message":"208","line":9,"column":12,"nodeType":"186","messageId":"187","endLine":9,"endColumn":25},{"ruleId":"184","severity":1,"message":"209","line":9,"column":27,"nodeType":"186","messageId":"187","endLine":9,"endColumn":43},{"ruleId":"184","severity":1,"message":"210","line":10,"column":12,"nodeType":"186","messageId":"187","endLine":10,"endColumn":22},{"ruleId":"184","severity":1,"message":"211","line":10,"column":24,"nodeType":"186","messageId":"187","endLine":10,"endColumn":37},{"ruleId":"184","severity":1,"message":"212","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":24},{"ruleId":"213","severity":1,"message":"214","line":1,"column":1,"nodeType":"215","endLine":3,"endColumn":3},{"ruleId":"184","severity":1,"message":"216","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":17},{"ruleId":"184","severity":1,"message":"202","line":57,"column":13,"nodeType":"186","messageId":"187","endLine":57,"endColumn":18},{"ruleId":"184","severity":1,"message":"202","line":11,"column":11,"nodeType":"186","messageId":"187","endLine":11,"endColumn":16},{"ruleId":"184","severity":1,"message":"212","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"217","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"201","line":2,"column":17,"nodeType":"186","messageId":"187","endLine":2,"endColumn":26},{"ruleId":"184","severity":1,"message":"218","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":22},{"ruleId":"184","severity":1,"message":"219","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":27},{"ruleId":"190","severity":1,"message":"220","line":19,"column":5,"nodeType":"186","messageId":"192","endLine":19,"endColumn":17},{"ruleId":"184","severity":1,"message":"221","line":19,"column":5,"nodeType":"186","messageId":"187","endLine":19,"endColumn":17},{"ruleId":"190","severity":1,"message":"222","line":23,"column":5,"nodeType":"186","messageId":"192","endLine":23,"endColumn":22},{"ruleId":"184","severity":1,"message":"223","line":23,"column":5,"nodeType":"186","messageId":"187","endLine":23,"endColumn":22},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'QuestionForm' is defined but never used.","'addQuestion' is assigned a value but never used.","no-const-assign","'setQuestions' is constant.","const","'Answers' is defined but never used.","'handleUpdateSubmittedAnswers' is assigned a value but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuestionsForCurrentTest', 'questionCounter', and 'questions'. Either include them or remove the dependency array.","ArrayExpression",["226"],"'nextAnswers' is assigned a value but never used.","'useEffect' is defined but never used.","'value' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'submittedAnswers' and 'testinstanceid'. Either include them or remove the dependency array.",["227"],"'AnswerInstance' is defined but never used.","'setIsSingleChoice' is assigned a value but never used.","'setIsChecked' is assigned a value but never used.","'isTrueAnswers' is assigned a value but never used.","'setIsTrueAnswers' is assigned a value but never used.","'isTestDone' is assigned a value but never used.","'setIsTestDone' is assigned a value but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CreateTag' is defined but never used.","'QuestionComponent' is defined but never used.","'CompanyService' is defined but never used.","'FieldOfStudyService' is defined but never used.","'setCompanyId' is constant.","'setCompanyId' is assigned a value but never used.","'setFieldOfStudyId' is constant.","'setFieldOfStudyId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [getQuestionsForCurrentTest, questionCounter, questions]",{"range":"232","text":"233"},"Update the dependencies array to be: [submittedAnswers, testinstanceid]",{"range":"234","text":"235"},[2327,2329],"[getQuestionsForCurrentTest, questionCounter, questions]",[465,467],"[submittedAnswers, testinstanceid]"]