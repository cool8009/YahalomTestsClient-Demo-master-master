<<<<<<< HEAD
[{"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\index.js":"1","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\reportWebVitals.js":"2","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\App.js":"3","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Home.js":"4","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstance.js":"5","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Tests.js":"6","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Questions.js":"7","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceForm.js":"8","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\EndTest.js":"9","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestCard.js":"10","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\Answers.js":"11","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\QuestionInstance.js":"12","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateTest.js":"13","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestService.js":"14","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\AnswerService.js":"15","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\QuestionService.js":"16","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionsTable.js":"17","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionForm.js":"18","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestInstanceService.js":"19","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\AnswerInstance.js":"20","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\QuestionComponent.js":"21","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\CompanyService.js":"22","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\FieldOfStudyService.js":"23","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\httpService.js":"24","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TagService.js":"25","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\AnswerComponent.js":"26","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\environments\\environment.js":"27"},{"size":565,"mtime":1646305719997,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1646305719998,"results":"30","hashOfConfig":"29"},{"size":1076,"mtime":1646305719991,"results":"31","hashOfConfig":"29"},{"size":911,"mtime":1646305719993,"results":"32","hashOfConfig":"29"},{"size":4910,"mtime":1646908115525,"results":"33","hashOfConfig":"29"},{"size":699,"mtime":1646305719996,"results":"34","hashOfConfig":"29"},{"size":1112,"mtime":1646325501230,"results":"35","hashOfConfig":"29"},{"size":2448,"mtime":1646907928127,"results":"36","hashOfConfig":"29"},{"size":240,"mtime":1646919554342,"results":"37","hashOfConfig":"29"},{"size":548,"mtime":1646305719994,"results":"38","hashOfConfig":"29"},{"size":1190,"mtime":1646905564681,"results":"39","hashOfConfig":"29"},{"size":1288,"mtime":1646664269958,"results":"40","hashOfConfig":"29"},{"size":3579,"mtime":1646325501229,"results":"41","hashOfConfig":"29"},{"size":645,"mtime":1646305720000,"results":"42","hashOfConfig":"29"},{"size":978,"mtime":1646305719999,"results":"43","hashOfConfig":"29"},{"size":844,"mtime":1646305719999,"results":"44","hashOfConfig":"29"},{"size":629,"mtime":1646305719994,"results":"45","hashOfConfig":"29"},{"size":1347,"mtime":1646305719993,"results":"46","hashOfConfig":"29"},{"size":850,"mtime":1646307290263,"results":"47","hashOfConfig":"29"},{"size":341,"mtime":1646662078365,"results":"48","hashOfConfig":"29"},{"size":2488,"mtime":1646849242946,"results":"49","hashOfConfig":"29"},{"size":683,"mtime":1646305719999,"results":"50","hashOfConfig":"29"},{"size":743,"mtime":1646305719999,"results":"51","hashOfConfig":"29"},{"size":614,"mtime":1646305720000,"results":"52","hashOfConfig":"29"},{"size":636,"mtime":1646305720000,"results":"53","hashOfConfig":"29"},{"size":1222,"mtime":1646325501227,"results":"54","hashOfConfig":"29"},{"size":61,"mtime":1646305719996,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1jdlwjc",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\index.js",[],["119","120"],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\reportWebVitals.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\App.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Home.js",["121"],"import React from \"react\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <div>\r\n      <div className=\"homeContainer\">\r\n        <h1 style={{ textAlign: \"center\" }}>Wecome to Quizzer</h1>\r\n        <button className=\"btn\" onClick={() => navigate(\"/tests\")}\r\n          style={{ backgroundColor: \"green\",\r\n          textAlign: \"center\", display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"50px auto\" }}>\r\n          Go To Tests\r\n        </button>\r\n        <button className=\"btn\" onClick={() => navigate(\"/questions\")}\r\n          style={{ backgroundColor: \"green\",\r\n          textAlign: \"center\", display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"50px auto\" }}>\r\n          Go To Questions\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstance.js",["122","123","124","125","126"],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Tests.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\Questions.js",["127"],"import { useEffect, useState } from \"react\";\r\nimport QuestionsTable from \"./QuestionsTable\";\r\nimport QuestionForm from \"./QuestionForm\";\r\nimport QuestionService from \"../services/ServicesFolder/QuestionService\"\r\n//const QuestionService = require(\"../services/Services\").QuestionService;\r\n\r\nconst Questions = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  useEffect(() => {\r\n    const getQuestions = async () => {\r\n      const questionsFromServer = await QuestionService.GetAllQuestions();\r\n      setQuestions(questionsFromServer);\r\n    };\r\n\r\n    getQuestions();\r\n  }, []);\r\n\r\n  const addQuestion = async (question) => {\r\n    const data = QuestionService.AddQuestion(question);\r\n    setQuestions =([...questions, data]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container questions\">\r\n      <div className=\"side\">\r\n        <h1>Questions List</h1>\r\n        <QuestionsTable questions={questions} />\r\n      </div>\r\n      <div className=\"side\">\r\n        <h1>Add a new question</h1>\r\n        <QuestionForm onAddQuestion={addQuestion} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceForm.js",["128","129"],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\EndTest.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestCard.js",["130"],"import React from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst TestCard = ({ test }) => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <div className=\"test\">\r\n      <h2>{test.Title}</h2>\r\n      <p>{test.Intro}</p>\r\n      <p>Minimum to pass: {test.MinimumToPass}</p>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: \"green\" }}\r\n        onClick={() => navigate('/testform/' + test.TestId)}\r\n      >\r\n        Take Test\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestCard;\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\Answers.js",["131"],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\QuestionInstance.js",["132","133","134","135","136","137"],"import React, {useState, useEffect} from 'react'\r\nimport Answers from './Answers';\r\n\r\nconst QuestionInstance = ({ currentQuestion, currentAnswers, onQuestionSubmit, \r\n  questionCounter, totalQuestions, onAnswerSubmit, \r\n  submittedAnswers, setSubmittedAnswers}) => {\r\n    const [isSingleChoice, setIsSingleChoice] = useState(currentQuestion.isSingleChoice)\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [isTrueAnswers, setIsTrueAnswers] = useState(false);\r\n    const [isTestDone, setIsTestDone] = useState(false);\r\n    \r\n    \r\n    useEffect(() => {\r\n        \r\n        \r\n    }, [])\r\n  return (\r\n    <div className='test-container'>\r\n         \r\n        <div>\r\n          <p>{currentQuestion.Title}</p>\r\n          <Answers \r\n            currentAnswers={currentAnswers} \r\n            isChecked={isChecked}\r\n            submittedAnswers={submittedAnswers}\r\n            setSubmittedAnswers={setSubmittedAnswers}\r\n            isSingleChoice={isSingleChoice}\r\n            onQuestionSubmit={onQuestionSubmit}\r\n            onAnswerSubmit={onAnswerSubmit}\r\n          />\r\n          \r\n          {\r\n            <p>Current question: {questionCounter} / {totalQuestions}</p>} \r\n        </div>\r\n        \r\n        \r\n               \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionInstance","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateTest.js",["138","139","140","141"],"import QuestionComponent from \"./QuestionComponent\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CompanyService from \"../../services/ServicesFolder/CompanyService\"\r\nimport FieldOfStudyService from \"../../services/ServicesFolder/FieldOfStudyService\"\r\nimport TestService  from \"../../services/ServicesFolder/TestService\";\r\n\r\n\r\n\r\nconst CreateTest = () => {\r\n  const [questions, setQuestions ]= useState([]);\r\n  const [intro, setIntro]=useState('');    \r\n  const [minimumToPass, setMinimumToPass]=useState(55);    \r\n  const [title, setTitle]=useState('');    \r\n  const [fieldOfStudyId, setFieldOfStudyId]=useState();\r\n  const [companyId, setCompanyId]=useState();\r\n \r\n  const [allCompanies, setAllCompanies] = useState([]);\r\n  const [allFieldsOfStudy, setAllFieldsOfStudy] = useState([]);\r\n  \r\n  const selectedCompany = (company) => {\r\n    setCompanyId = company.companyId;\r\n  };\r\n\r\n  const selectedFieldOfStudy = (fieldOfStudy) => {\r\n    setFieldOfStudyId = fieldOfStudy.FieldOfStudyId;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeAllCompanies = async () => {\r\n      const allCompanyes = await CompanyService.GetAllCompanys()\r\n        .catch(err => console.log(err));\r\n      setAllCompanies(allCompanyes);\r\n      initializeAllFieldsOfStudy();\r\n    }\r\n    const initializeAllFieldsOfStudy = async () => {\r\n      const allFieldsOfStudy = await FieldOfStudyService.GetAllFieldsOfStudy();\r\n      setAllFieldsOfStudy(allFieldsOfStudy);\r\n    }\r\n    initializeAllCompanies();\r\n  }, [])\r\n\r\n  const AddQuestion=(question)=>{\r\n    setQuestions([...questions,question])\r\n  }\r\n\r\n  const SendTest=()=>{\r\n    let test ={      \r\n      Intro: intro,\r\n      MinimumToPass: minimumToPass,\r\n      Title: title,\r\n      FieldOfStudyId: fieldOfStudyId,\r\n      CompanyId: companyId\r\n    } \r\n    TestService.AddTest({test: test , questions: questions});\r\n  }\r\n\r\n  return (\r\n      <form className=\"add-form\" >\r\n        <div className=\"form-control\">\r\n          <label>Enter Title</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Enter Minimum To Pass</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Minimum To Pass\"\r\n            onChange={(e) => setMinimumToPass(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n          <label>Enter Intro</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Intro\"\r\n            onChange={(e) => setIntro(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n          <label>check company</label>\r\n          <select onChange={selectedCompany}>\r\n            {allCompanies.map((Company) => (\r\n            <option id={Company.CompanyId}>{Company.CompanyName}</option>\r\n          ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n          <label>check Field Of Study</label>\r\n          <select onChange={selectedFieldOfStudy}>\r\n            {allFieldsOfStudy.map((fieldOfStudy) => (\r\n            <option id={fieldOfStudy.FieldOfStudyId}>{fieldOfStudy.FieldName}</option>\r\n          ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <QuestionComponent AddQuestion={AddQuestion} />\r\n        </div>\r\n        <input className=\"btn\" type=\"submit\" value=\"Create Test\" onClick={SendTest}/>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default CreateTest\r\n","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\AnswerService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\QuestionService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionsTable.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionForm.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestInstanceService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\AnswerInstance.js",["142"],"import React, {useState} from 'react'\r\n\r\nconst AnswerInstance = ({answer}) => {\r\n  // type={isSingleChoice ? 'checkbox' : 'radio'}\r\n  \r\n  return (\r\n    <div>\r\n        <input    \r\n            value={answer.Content}\r\n            />\r\n            <label>{answer.Content}</label>\r\n            \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnswerInstance","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\QuestionComponent.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\CompanyService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\FieldOfStudyService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\httpService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TagService.js",[],"E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\AnswerComponent.js",["143","144","145","146"],"import QuestionComponent from \"./QuestionComponent\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CompanyService from \"../../services/ServicesFolder/CompanyService\"\r\nimport FieldOfStudyService from \"../../services/ServicesFolder/FieldOfStudyService\"\r\n\r\n\r\n\r\nconst AnswerComponent = ({AddAnswers}) => {\r\n\r\n  const [title, setTitle]=useState(''); \r\n  const [isTrue, setisTrue]=useState(false);\r\n\r\n  const submittedAnswer = () =>\r\n    AddAnswers({Title: title,IsTrue: isTrue});\r\n\r\n  return (\r\n      <form className=\"add-form\" >\r\n        <div className=\"form-control\">\r\n          <label>Enter Title</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n          <label>Enter if this answer is true</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            value=\"Its true answer\"\r\n            onChange={(e) => setisTrue(e.target.value)}\r\n          />\r\n        </div>\r\n        <input className=\"btn\" type=\"submit\" value=\"Create Answer\"  onSubmit={submittedAnswer}/>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default AnswerComponent","E:\\desktopshortcuts\\yahalom\\quizzernew\\New folder\\YahalomTestsClient-Demo-master-master\\src\\environments\\environment.js",["147"],"export default {\r\n  serverUrl: \"http://localhost:4000\",\r\n};\r\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":23,"nodeType":"154","messageId":"155","endLine":2,"endColumn":32},{"ruleId":"152","severity":1,"message":"156","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":15},{"ruleId":"152","severity":1,"message":"157","line":27,"column":9,"nodeType":"154","messageId":"155","endLine":27,"endColumn":37},{"ruleId":"152","severity":1,"message":"158","line":37,"column":7,"nodeType":"154","messageId":"155","endLine":37,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":56,"column":6,"nodeType":"161","endLine":56,"endColumn":8,"suggestions":"162"},{"ruleId":"152","severity":1,"message":"163","line":79,"column":13,"nodeType":"154","messageId":"155","endLine":79,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":20,"column":5,"nodeType":"154","messageId":"166","endLine":20,"endColumn":17},{"ruleId":"152","severity":1,"message":"167","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"168","line":33,"column":15,"nodeType":"154","messageId":"155","endLine":33,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":2,"column":23,"nodeType":"154","messageId":"155","endLine":2,"endColumn":32},{"ruleId":"152","severity":1,"message":"169","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":22},{"ruleId":"152","severity":1,"message":"170","line":7,"column":28,"nodeType":"154","messageId":"155","endLine":7,"endColumn":45},{"ruleId":"152","severity":1,"message":"171","line":8,"column":23,"nodeType":"154","messageId":"155","endLine":8,"endColumn":35},{"ruleId":"152","severity":1,"message":"172","line":9,"column":12,"nodeType":"154","messageId":"155","endLine":9,"endColumn":25},{"ruleId":"152","severity":1,"message":"173","line":9,"column":27,"nodeType":"154","messageId":"155","endLine":9,"endColumn":43},{"ruleId":"152","severity":1,"message":"174","line":10,"column":12,"nodeType":"154","messageId":"155","endLine":10,"endColumn":22},{"ruleId":"152","severity":1,"message":"175","line":10,"column":24,"nodeType":"154","messageId":"155","endLine":10,"endColumn":37},{"ruleId":"164","severity":1,"message":"176","line":21,"column":5,"nodeType":"154","messageId":"166","endLine":21,"endColumn":17},{"ruleId":"152","severity":1,"message":"177","line":21,"column":5,"nodeType":"154","messageId":"155","endLine":21,"endColumn":17},{"ruleId":"164","severity":1,"message":"178","line":25,"column":5,"nodeType":"154","messageId":"166","endLine":25,"endColumn":22},{"ruleId":"152","severity":1,"message":"179","line":25,"column":5,"nodeType":"154","messageId":"155","endLine":25,"endColumn":22},{"ruleId":"152","severity":1,"message":"180","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"181","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"167","line":2,"column":17,"nodeType":"154","messageId":"155","endLine":2,"endColumn":26},{"ruleId":"152","severity":1,"message":"182","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":22},{"ruleId":"152","severity":1,"message":"183","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":1,"column":1,"nodeType":"186","endLine":3,"endColumn":3},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Answers' is defined but never used.","'handleUpdateSubmittedAnswers' is assigned a value but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuestionsForCurrentTest', 'questionCounter', and 'questions'. Either include them or remove the dependency array.","ArrayExpression",["189"],"'nextAnswers' is assigned a value but never used.","no-const-assign","'setQuestions' is constant.","const","'useEffect' is defined but never used.","'value' is assigned a value but never used.","'AnswerInstance' is defined but never used.","'setIsSingleChoice' is assigned a value but never used.","'setIsChecked' is assigned a value but never used.","'isTrueAnswers' is assigned a value but never used.","'setIsTrueAnswers' is assigned a value but never used.","'isTestDone' is assigned a value but never used.","'setIsTestDone' is assigned a value but never used.","'setCompanyId' is constant.","'setCompanyId' is assigned a value but never used.","'setFieldOfStudyId' is constant.","'setFieldOfStudyId' is assigned a value but never used.","'useState' is defined but never used.","'QuestionComponent' is defined but never used.","'CompanyService' is defined but never used.","'FieldOfStudyService' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},"Update the dependencies array to be: [getQuestionsForCurrentTest, questionCounter, questions]",{"range":"192","text":"193"},[2327,2329],"[getQuestionsForCurrentTest, questionCounter, questions]"]
=======
[{"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\index.js":"1","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\reportWebVitals.js":"2","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\App.js":"3","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\Home.js":"4","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstance.js":"5","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\Tests.js":"6","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\Questions.js":"7","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceForm.js":"8","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionsTable.js":"9","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\EndTest.js":"10","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionForm.js":"11","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestCard.js":"12","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\Answers.js":"13","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\QuestionInstance.js":"14","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\AnswerService.js":"15","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\QuestionService.js":"16","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestService.js":"17","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateTest.js":"18","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestInstanceService.js":"19","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\AnswerInstance.js":"20","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\httpService.js":"21","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\CompanyService.js":"22","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\FieldOfStudyService.js":"23","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\environments\\environment.js":"24","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\AnswerComponent.js":"25","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TagService.js":"26","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateQuestionComponent.js":"27"},{"size":565,"mtime":1646140350390,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1646140350390,"results":"30","hashOfConfig":"29"},{"size":1246,"mtime":1646664664848,"results":"31","hashOfConfig":"29"},{"size":911,"mtime":1646140350382,"results":"32","hashOfConfig":"29"},{"size":5323,"mtime":1646231577396,"results":"33","hashOfConfig":"29"},{"size":699,"mtime":1646140350390,"results":"34","hashOfConfig":"29"},{"size":1112,"mtime":1646326332064,"results":"35","hashOfConfig":"29"},{"size":2417,"mtime":1646315825369,"results":"36","hashOfConfig":"29"},{"size":629,"mtime":1646140350382,"results":"37","hashOfConfig":"29"},{"size":144,"mtime":1646231577380,"results":"38","hashOfConfig":"29"},{"size":1347,"mtime":1646140350382,"results":"39","hashOfConfig":"29"},{"size":548,"mtime":1646140350382,"results":"40","hashOfConfig":"29"},{"size":338,"mtime":1646140350382,"results":"41","hashOfConfig":"29"},{"size":1002,"mtime":1646231577425,"results":"42","hashOfConfig":"29"},{"size":978,"mtime":1646140350390,"results":"43","hashOfConfig":"29"},{"size":844,"mtime":1646140350398,"results":"44","hashOfConfig":"29"},{"size":645,"mtime":1646140350398,"results":"45","hashOfConfig":"29"},{"size":3581,"mtime":1646664491036,"results":"46","hashOfConfig":"29"},{"size":850,"mtime":1646315825383,"results":"47","hashOfConfig":"29"},{"size":392,"mtime":1646315825362,"results":"48","hashOfConfig":"29"},{"size":614,"mtime":1646140350398,"results":"49","hashOfConfig":"29"},{"size":683,"mtime":1646140350390,"results":"50","hashOfConfig":"29"},{"size":743,"mtime":1646140350398,"results":"51","hashOfConfig":"29"},{"size":61,"mtime":1646140350390,"results":"52","hashOfConfig":"29"},{"size":1161,"mtime":1646747221873,"results":"53","hashOfConfig":"29"},{"size":636,"mtime":1646140350398,"results":"54","hashOfConfig":"29"},{"size":2572,"mtime":1646850320023,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"hcuht8",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\index.js",[],["118","119"],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\reportWebVitals.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\App.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\Home.js",["120"],"import React from \"react\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <div>\r\n      <div className=\"homeContainer\">\r\n        <h1 style={{ textAlign: \"center\" }}>Wecome to Quizzer</h1>\r\n        <button className=\"btn\" onClick={() => navigate(\"/tests\")}\r\n          style={{ backgroundColor: \"green\",\r\n          textAlign: \"center\", display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"50px auto\" }}>\r\n          Go To Tests\r\n        </button>\r\n        <button className=\"btn\" onClick={() => navigate(\"/questions\")}\r\n          style={{ backgroundColor: \"green\",\r\n          textAlign: \"center\", display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"50px auto\" }}>\r\n          Go To Questions\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstance.js",["121","122","123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport QuestionService from \"../services/ServicesFolder/QuestionService\"\r\nimport AnswerService from \"../services/ServicesFolder/AnswerService\"\r\nimport QuestionInstance from \"../components/TestInstanceComponents/QuestionInstance\";\r\nimport Answers from \"./TestInstanceComponents/Answers\";\r\nimport EndTest from \"./EndTest\";\r\n\r\nconst TestInstance = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n  const [currentAnswers, setCurrentAnswers] = useState({});\r\n  const [questionCounter, setQuestionCounter] = useState(0);\r\n  const [canStartTest, setCanStartTest] = useState(false);\r\n  const [finishedTest, setFinishedTest] = useState(false);\r\n  const [submittedAnswers, setSubmittedAnswers] = useState([])\r\n\r\n  function shuffleArray(array) {\r\n    if (array.length === 0) return array;\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }\r\n\r\n  const handleUpdateSubmittedAnswers = (index, submittedAnswer) => {\r\n  const newTodos = [...submittedAnswers];\r\n  newTodos[index] = submittedAnswer;\r\n  setSubmittedAnswers(newTodos);\r\n}\r\n  function onAnswerSubmit(submittedAnswer) {\r\n    let answerExists = false;\r\n    if (submittedAnswers.length === 0)\r\n      setSubmittedAnswers([...submittedAnswers, submittedAnswer]);\r\n    else {\r\n      submittedAnswers.forEach((answer, index) => {\r\n        if(answer.QuestionId === submittedAnswer.QuestionId) {\r\n          handleUpdateSubmittedAnswers(submittedAnswer, index)\r\n          answerExists = true;\r\n        }\r\n        });\r\n      if (answerExists)\r\n        return;\r\n      else\r\n        setSubmittedAnswers([...submittedAnswers,submittedAnswer])\r\n    }\r\n  }\r\n\r\n  let navigate = useNavigate();\r\n  let { id, testinstanceid } = useParams();\r\n  useEffect(() => {\r\n    const initializeTestQuestions = async () => {\r\n        const questionsForCurrentTest = await getQuestionsForCurrentTest();\r\n        shuffleArray(questionsForCurrentTest);\r\n        setQuestions(questionsForCurrentTest);\r\n        initializeAnswersToQuestions(questionsForCurrentTest);\r\n        \r\n        console.log(questions[questionCounter])\r\n      };\r\n      const initializeAnswersToQuestions = async (filteredQuestions) => {\r\n        const filteredAnswers = await getAnswersForCurrentQuestion(filteredQuestions[questionCounter].QuestionId);\r\n        setAnswers(filteredAnswers);\r\n        setAnswers(filteredAnswers);\r\n      };\r\n      initializeTestQuestions();\r\n      \r\n\r\n  }, [])\r\n\r\n  const onStartTest  = () => {\r\n    setCanStartTest(true);\r\n    setCurrentQuestion(questions[questionCounter]);\r\n    setCurrentAnswers(answers);\r\n  }\r\n\r\n  const getQuestionsForCurrentTest = async () => {\r\n    const res = await QuestionService.GetQuestionsByTestId(id);   \r\n    return [...res];\r\n  };\r\n\r\n\r\n  const getAnswersForCurrentQuestion = async (questionid) => {\r\n    const res = await AnswerService.GetAnswersByQuestionId(questionid);\r\n    return [...res];\r\n  };\r\n\r\n  const onQuestionSubmit = async () => {\r\n    if (questionCounter < questions.length) {\r\n      setQuestionCounter(questionCounter + 1);\r\n      setCurrentQuestion(questions[questionCounter]);\r\n      const nextAnswers = await getAnswersForCurrentQuestion(questions[questionCounter].QuestionId)\r\n        .then((answers) => {\r\n          setCurrentAnswers(answers);\r\n        });\r\n      \r\n    }\r\n    else {\r\n      setFinishedTest(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        (() => {\r\n          if(!finishedTest)\r\n          return (\r\n              <div className=\"test-container\">\r\n                {\r\n                  (() => {\r\n                    if (!canStartTest && answers && currentAnswers)  \r\n                    return (\r\n                    <div>\r\n                      <p>Welcome to the test! to start press begin:</p>\r\n                      <button \r\n                        className=\"btn\" \r\n                        onClick={() => onStartTest()}>Start Test\r\n                      </button> \r\n                    </div>)\r\n                    else\r\n                      return (\r\n                      <QuestionInstance \r\n                        currentQuestion={currentQuestion} \r\n                        currentAnswers={currentAnswers}\r\n                        questionCounter={questionCounter}\r\n                        onAnswerSubmit={onAnswerSubmit}\r\n                        onQuestionSubmit={() => onQuestionSubmit()}\r\n                        totalQuestions={questions.length}\r\n                      />)\r\n                    })()\r\n                  }\r\n              </div>\r\n          )\r\n          else \r\n              return (\r\n                <div className=\"test-container\">\r\n                  <EndTest \r\n                    submittedAnswers={submittedAnswers}\r\n                    testinstanceId={testinstanceid}\r\n                  />\r\n                </div>\r\n              )\r\n        })()\r\n            \r\n          \r\n          \r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestInstance;\r\n// {answers.map((answer) => (\r\n//   <AnswerInstance key={answer.Id} answer={answer} />\r\n// ))}","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\Tests.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\Questions.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceForm.js",["125","126"],"import React, {useState, useEffect} from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport TestInstanceService from '../services/ServicesFolder/TestInstanceService'\r\n\r\nconst TestInstanceForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    let { id } = useParams();\r\n    let navigate = useNavigate();\r\n    const createTestInstance = async (TestInstance) => {\r\n        const testinstanceid = await TestInstanceService.AddTestInstance(TestInstance);\r\n        return testinstanceid;\r\n        \r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!email) {\r\n          alert(\"Please enter an email\");\r\n        }\r\n        if (!firstName) {\r\n          alert(\"Please enter a first name\");\r\n        }\r\n        if (!lastName) {\r\n          alert(\"Please enter a last name\");\r\n        }\r\n        let TestId = id;\r\n        let Email = email;\r\n        let FirstName = firstName;\r\n        let LastName = lastName;\r\n        const value = await createTestInstance({ TestId ,Email, FirstName, LastName })\r\n            .then((res) => {return res.data})\r\n            .then((res) => navigate('/test/' + id + '/' + res)\r\n        \r\n            )};\r\n\r\n      return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n          <div className=\"form-control\">\r\n            <label>Enter Email</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label>Enter First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-control form-control-check\">\r\n            <label>Enter Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </div>\r\n          <input className=\"btn\" type=\"submit\" value=\"Start Test\" />\r\n        </form>\r\n      );\r\n}\r\n\r\nexport default TestInstanceForm","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionsTable.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\EndTest.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\QuestionForm.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestCard.js",["127"],"import React from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst TestCard = ({ test }) => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <div className=\"test\">\r\n      <h2>{test.Title}</h2>\r\n      <p>{test.Intro}</p>\r\n      <p>Minimum to pass: {test.MinimumToPass}</p>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: \"green\" }}\r\n        onClick={() => navigate('/testform/' + test.TestId)}\r\n      >\r\n        Take Test\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestCard;\r\n","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\Answers.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\QuestionInstance.js",["128","129","130","131","132"],"import React, {useState, useEffect} from 'react'\r\nimport Answers from './Answers';\r\n\r\nconst QuestionInstance = ({ currentQuestion, currentAnswers, onQuestionSubmit, questionCounter, totalQuestions, onAnswerSubmit}) => {\r\n    \r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [isTrueAnswers, setIsTrueAnswers] = useState(false);\r\n    const [isTestDone, setIsTestDone] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        \r\n        \r\n    }, [])\r\n  return (\r\n    <div className='test-container'>\r\n         \r\n        <div>\r\n          <p>{currentQuestion.Title}</p>\r\n          <Answers \r\n            currentAnswers={currentAnswers} \r\n            isChecked={isChecked}\r\n          />\r\n          <button type='submit' onClick={() => { onQuestionSubmit(); onAnswerSubmit();}}>Submit</button>\r\n          {\r\n            <p>Current question: {questionCounter} / {totalQuestions}</p>} \r\n        </div>\r\n        \r\n        \r\n               \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionInstance","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\AnswerService.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\QuestionService.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestService.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateTest.js",["133","134","135","136"],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TestInstanceService.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\TestInstanceComponents\\AnswerInstance.js",["137"],"import React, {useState} from 'react'\r\n\r\nconst AnswerInstance = ({answer}) => {\r\n  const isSingleChoice= answer.IsSingleChoice;\r\n  return (\r\n    <div>\r\n        <input    \r\n            type={isSingleChoice ? 'checkbox' : 'radio'}\r\n            value={answer.Content}\r\n            />\r\n            <label>{answer.Content}</label>\r\n            \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnswerInstance","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\httpService.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\CompanyService.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\FieldOfStudyService.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\environments\\environment.js",["138"],"export default {\r\n  serverUrl: \"http://localhost:4000\",\r\n};\r\n","C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\AnswerComponent.js",["139","140","141","142"],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\services\\ServicesFolder\\TagService.js",[],"C:\\Users\\nikit\\OneDrive\\Documents\\YahalomTestsClient-Demo-master-master\\src\\components\\CreateTest\\CreateQuestionComponent.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":23,"nodeType":"149","messageId":"150","endLine":2,"endColumn":32},{"ruleId":"147","severity":1,"message":"151","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":15},{"ruleId":"147","severity":1,"message":"152","line":50,"column":7,"nodeType":"149","messageId":"150","endLine":50,"endColumn":15},{"ruleId":"153","severity":1,"message":"154","line":69,"column":6,"nodeType":"155","endLine":69,"endColumn":8,"suggestions":"156"},{"ruleId":"147","severity":1,"message":"157","line":92,"column":13,"nodeType":"149","messageId":"150","endLine":92,"endColumn":24},{"ruleId":"147","severity":1,"message":"158","line":1,"column":26,"nodeType":"149","messageId":"150","endLine":1,"endColumn":35},{"ruleId":"147","severity":1,"message":"159","line":32,"column":15,"nodeType":"149","messageId":"150","endLine":32,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":2,"column":23,"nodeType":"149","messageId":"150","endLine":2,"endColumn":32},{"ruleId":"147","severity":1,"message":"160","line":6,"column":23,"nodeType":"149","messageId":"150","endLine":6,"endColumn":35},{"ruleId":"147","severity":1,"message":"161","line":7,"column":12,"nodeType":"149","messageId":"150","endLine":7,"endColumn":25},{"ruleId":"147","severity":1,"message":"162","line":7,"column":27,"nodeType":"149","messageId":"150","endLine":7,"endColumn":43},{"ruleId":"147","severity":1,"message":"163","line":8,"column":12,"nodeType":"149","messageId":"150","endLine":8,"endColumn":22},{"ruleId":"147","severity":1,"message":"164","line":8,"column":24,"nodeType":"149","messageId":"150","endLine":8,"endColumn":37},{"ruleId":"165","severity":1,"message":"166","line":19,"column":5,"nodeType":"149","messageId":"167","endLine":19,"endColumn":17},{"ruleId":"147","severity":1,"message":"168","line":19,"column":5,"nodeType":"149","messageId":"150","endLine":19,"endColumn":17},{"ruleId":"165","severity":1,"message":"169","line":23,"column":5,"nodeType":"149","messageId":"167","endLine":23,"endColumn":22},{"ruleId":"147","severity":1,"message":"170","line":23,"column":5,"nodeType":"149","messageId":"150","endLine":23,"endColumn":22},{"ruleId":"147","severity":1,"message":"171","line":1,"column":16,"nodeType":"149","messageId":"150","endLine":1,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":1,"column":1,"nodeType":"174","endLine":3,"endColumn":3},{"ruleId":"147","severity":1,"message":"175","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"158","line":2,"column":17,"nodeType":"149","messageId":"150","endLine":2,"endColumn":26},{"ruleId":"147","severity":1,"message":"176","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":22},{"ruleId":"147","severity":1,"message":"177","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":27},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Answers' is defined but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuestionsForCurrentTest', 'questionCounter', and 'questions'. Either include them or remove the dependency array.","ArrayExpression",["180"],"'nextAnswers' is assigned a value but never used.","'useEffect' is defined but never used.","'value' is assigned a value but never used.","'setIsChecked' is assigned a value but never used.","'isTrueAnswers' is assigned a value but never used.","'setIsTrueAnswers' is assigned a value but never used.","'isTestDone' is assigned a value but never used.","'setIsTestDone' is assigned a value but never used.","no-const-assign","'setCompanyId' is constant.","const","'setCompanyId' is assigned a value but never used.","'setFieldOfStudyId' is constant.","'setFieldOfStudyId' is assigned a value but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'QuestionComponent' is defined but never used.","'CompanyService' is defined but never used.","'FieldOfStudyService' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},"Update the dependencies array to be: [getQuestionsForCurrentTest, questionCounter, questions]",{"range":"183","text":"184"},[2728,2730],"[getQuestionsForCurrentTest, questionCounter, questions]"]
>>>>>>> 1f7655bd1031774f42507f02f4023d8fc0691212
